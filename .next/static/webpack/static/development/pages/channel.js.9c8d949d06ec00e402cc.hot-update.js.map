{"version":3,"file":"static/webpack/static/development/pages/channel.js.9c8d949d06ec00e402cc.hot-update.js","sources":["webpack:///./pages/channel.js"],"sourcesContent":["import React, { Fragment} from 'react';\nimport 'isomorphic-fetch';\nimport Link from 'next/link';\nimport Layout from '../components/Layout';\nimport ChannelGrid from '../components/ChannelGrid';\nimport PodcastList from '../components/PodcastList';\n\nclass Channel extends React.Component{\n    \n    static async getInitialProps({ query }){\n        const idChannel = query.id\n\n        try{\n            let [reqChannel, reqSeries, reqAudios] = await Promise.all([\n                fetch(`https://api.audioboom.com/channels/${ idChannel }`),\n                fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`),\n                fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`)\n            ])\n            \n            const dataChannel = await reqChannel.json();\n            const channel = dataChannel.body.channel;\n    \n            const dataSeries = await reqSeries.json();\n            const series = dataSeries.body.channels\n            \n    \n            const dataAudios =  await reqAudios.json();\n            const audioClips = dataAudios.body.audio_clips;\n            \n            return {channel, audioClips, series };\n        } catch(e){\n            return { \n                channel: null, \n                audioClips: null, \n                series: null \n            }\n        }\n    }\n    \n    render(){\n        const { \n            channel, \n            audioClips,\n            series\n        } = this.props;\n        //console.log(channel, audioClips);\n        return(\n            <Layout nav={{title:'home', href:\"/\"}} title={ channel.title }>\n                \n                <div className=\"banner\" style={{ backgroundImage: `url(${channel.urls.banner_image.original})` }} />\n                <h1>{ channel.title }</h1>\n                {\n                    series.length > 0 &&\n                    <Fragment>\n                        <h2>Series</h2>\n                        <ChannelGrid  channels={ series } />\n                    </Fragment>\n                }\n                <PodcastList  audioClips={ audioClips } />\n\n\n                <style jsx>{`\n                .banner {\n                width: 100%;\n                padding-bottom: 25%;\n                background-position: 50% 50%;\n                background-size: cover;\n                background-color: #aaa;\n                }\n                h1 {\n                font-weight: 600;\n                padding: 15px;\n                }\n            `}</style>\n            </Layout>\n        )\n    }\n}\n\nexport default Channel;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAgCA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAXA;AAAA;AAAA;AA6BA;;;;;;;;;;;;;AAnEA;AACA;;;AAGA;AACA;;;;AADA;AAAA;AAAA;;AAMA;AACA;;AADA;AACA;;AAEA;AACA;;AADA;AACA;;AAGA;AACA;;AADA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;;;;AACA;AACA;AACA;AACA;AAHA;AACA;;;;;;;;;;;;;;;;;;AAzBA;AACA;AAuEA;;;;A","sourceRoot":""}